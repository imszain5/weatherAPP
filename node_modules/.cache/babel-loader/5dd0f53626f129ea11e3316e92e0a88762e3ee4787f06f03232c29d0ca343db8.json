{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/my-app/src/App.js\";\nimport React from 'react';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\n\n// const [addItem, setAddItem] =useState([]);\n// const addNote =(note)=>{\n//       setAddItem((prevData)=>{\n//         return[...prevData, note];\n//       })\n// };\n// return (\n//  <>\n//    <Header/>\n//    <CreateNote passNote={addNote}/>\n//    {addItem.map((val,index)=>{\n//     return (<Note \n//        key={index}\n//            id={index}\n//            title={val.title}\n//            content={val.content}\n//     />);\n//    })}\n//    <Footer/> \n//  </>\n// );\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","Weather","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/my-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\n\n\n\nconst App=() =>{\n  return(\n    <> \n    {/* <Navbar/>\n      <Routes>\n        <Route exact path='/' Component={Home}/>\n        <Route exact path='/about' Component={About}/>\n        <Route exact path='/service' Component={Service}/>\n        <Route exact path='/contact' Component={Contact}/>\n      </Routes>\n      <Footer/> */}\n      <Weather/>\n\n\n      \n    </>\n  );\n \n}\n\nexport default App;\n\n\n// const [addItem, setAddItem] =useState([]);\n// const addNote =(note)=>{\n//       setAddItem((prevData)=>{\n//         return[...prevData, note];\n//       })\n// };\n// return (\n//  <>\n//    <Header/>\n//    <CreateNote passNote={addNote}/>\n//    {addItem.map((val,index)=>{\n//     return (<Note \n//        key={index}\n//            id={index}\n//            title={val.title}\n//            content={val.content}\n//     />);\n//    })}\n//    <Footer/> \n//  </>\n// );"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sDAAsD;AAC7D,OAAO,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI5D,MAAMC,GAAG,GAACA,CAAA,KAAK;EACb,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eASEJ,OAAA,CAACK,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAIV,CAAC;AAGP,CAAC;AAAAC,EAAA,GAlBKP,GAAG;AAoBT,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}